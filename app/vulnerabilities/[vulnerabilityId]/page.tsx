import React from "react";
import {Vulnerability} from "../../../typings";
import { ApolloClient, gql, InMemoryCache } from "@apollo/client";

type PageProps = {
    params: {
        vulnerabilityId: string
    }
}

const fetchVulnerability = async (vulnerabilityId: string) => {
    const client = new ApolloClient({
        uri: `http://localhost:3001/graphql`,
        cache: new InMemoryCache()
    });

    const { data } = await client.query({
        query: gql`
        {
          vulnerabilities(id: "${vulnerabilityId}"){
            id
            severity
            exploitability
            impact
            references {
              url
            }
            publishedDate
            lastModifiedDate
            cweIds {
              id
              operations {
                name
              }
              phases {
                name
              }
            }
          }
        }
        `
    })
    console.log(data)
    const vuln: Vulnerability = await data.vulnerabilities[0]

    return vuln
}

export default async function CWEPage({ params: { vulnerabilityId } }: PageProps){
    const vuln = await fetchVulnerability(vulnerabilityId)

    return <div className="py-5 px-4 bg-gray-200 border-2 m-2 text-green-800 shadow-lg">
        <p>
            #{vuln.id}: {vuln.name}
        </p>

        <p>
            Severity: {vuln.severity} | Impact: {vuln.impact} | Exploitability: {vuln.exploitability}
        </p>

        <div className="border-t border-green mt-5">
            {vuln.cweIds.map((cwe) => (
                <p>
                    CWE-ID: {cwe.id} | Operations: {cwe.operations} | Phases: {cwe.phases}
                </p>
            ))}
        </div>
    </div>
}
